# set -g mode-mouse on
set -g mode-keys vi
set -g base-index 1
set-window-option -g pane-base-index 1
set -g pane-base-index 1
set -g history-limit 10000
set -s escape-time 0
#set-window-option -g xterm-keys on

set -g prefix C-q
unbind C-b
bind C-w send-prefix

bind q setw synchronize-panes

bind -r k resize-pane -U 5
bind -r j resize-pane -D 5
bind -r h resize-pane -L 5
bind -r l resize-pane -R 5

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -sel c'

# Update default binding of `Enter` to also use copy-pipe
# unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Use better vi copy
unbind-key -T copy-mode-vi '$'
unbind-key -T copy-mode-vi 'H'
unbind-key -T copy-mode-vi '^'
unbind-key -T copy-mode-vi 'L'

bind-key -T copy-mode-vi 'H' send-keys -X start-of-line
bind-key -T copy-mode-vi 'L' send-keys -X end-of-line
bind-key -T copy-mode-vi '^' send-keys -X top-line
bind-key -T copy-mode-vi '$' send-keys -X bottom-line


# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind _ split-window -v -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
unbind '"'
unbind %

#bind-key [ swap-window -t -1
#bind-key ] swap-window -t +1

# Set key binding + 'w' to switch to the last window used
bind-key C-w last-window

# 12 hour clock
set-window-option -g clock-mode-style 12

# set-option -g status-interval 1



# Mouse can be used to select panes
# set-option -g mouse-select-pane on

# For tmux 1.9
unbind c
bind c new-window -c '#{pane_current_path}'

## Join windows: <prefix> s, <prefix> j
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key K command-prompt -p "send pane to:"  "join-pane -t '%%'"


###########################
# Status bar
###########################
# On the left-side of status in green: print '{session_name} {user}@{hostname}'
#set-option -g status-position top
set-option -g status-position top
set -g status-left '#[fg=green](#S)#[default]'


###########################
# Colors
###########################

# Set to use 256 colors
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

source-file ~/.tmux-airline.theme

###########################
# Fixes/Patches
###########################
# Patch for OS X pbpaste and pbcopy under tmux.
set -g default-shell $SHELL
set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"

## List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'jbnicolai/tmux-fpp'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
